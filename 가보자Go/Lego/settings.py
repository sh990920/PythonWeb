"""
Django settings for Lego project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-er3&fy1p$4k0*%ux_ln@lx(5(qpa$7ix&)$5mr!(ev99t6oi1k"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 접근 할 호스트 IP 주소
ALLOWED_HOSTS = []

# 사용할 앱
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "member",
    "chat",
    "show",
    "recruit",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "Lego.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "Lego.wsgi.application"


# 데이터베이스 MySQL로 수정
# MySQL Version : 8.0.33
# MySQL 연동 방법 :
# MySQL Client 설치후 진행 -> pip install mysqlclient
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",  # 설치한 MySQLClient 사용
        "NAME": "Lego",  # 데이터베이스 이름
        "USER": "root",  # 유저 이름
        "PASSWORD": "root",  # 유저 패스워드
        "HOST": "localhost",  # MySQL 서버 IP주소
        "PORT": "3306",  # MySQL 서버 포트번호(default : 3306)
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

# 한국 시간대로 변경
TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 기본유저를 상속받는 커스텀 유저를 사용하기위해서 선언
AUTH_USER_MODEL = "member.Member"  # 앱이름.클래스이름 으로 선언

# 인증 방식 변경
AUTHENTICATION_BACKENDS = ("django.contrib.auth.backends.ModelBackend",)
